version: '3.8'

services:
  # Enhanced RAGHeat Frontend with Cytoscape
  ragheat-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8001
      - GENERATE_SOURCEMAP=false
      - NODE_OPTIONS=--max-old-space-size=4096
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - ragheat-backend
    networks:
      - ragheat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Enhanced RAGHeat Backend
  ragheat-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=ragheat123
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    depends_on:
      - neo4j
      - redis
    networks:
      - ragheat_network
    restart: unless-stopped
    command: ["python", "simple_main.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Neo4j Knowledge Graph Database
  neo4j:
    image: neo4j:5.13-community
    ports:
      - "7474:7474"  # Browser
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/ragheat123
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*
      - NEO4J_initial_dbms_default__database=neo4j
      - NEO4J_dbms_memory_heap_initial_size=1G
      - NEO4J_dbms_memory_heap_max_size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
      - neo4j_import:/import
    networks:
      - ragheat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "ragheat123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching and Session Storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ragheat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ragheat-frontend
      - ragheat-backend
    networks:
      - ragheat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_plugins:
    driver: local
  neo4j_import:
    driver: local
  redis_data:
    driver: local
  backend_data:
    driver: local

networks:
  ragheat_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16